name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
      - name: Build
        run: |
          mkdir -p dist
          ext=""
          if [ "${{ matrix.goos }}" = "windows" ]; then ext=".exe"; fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/talostpl-${{ matrix.goos }}-${{ matrix.goarch }}${ext} main.go
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: talostpl-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/talostpl-*
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/talostpl-*
          title: "Release ${{ github.ref_name }}"
          body: |
            - [Linux](https://github.com/vasyakrg/talostpl/releases/download/${{ github.ref_name }}/talostpl-linux-amd64)
            - [Linux ARM64](https://github.com/vasyakrg/talostpl/releases/download/${{ github.ref_name }}/talostpl-linux-arm64)
            - [Darwin AMD64](https://github.com/vasyakrg/talostpl/releases/download/${{ github.ref_name }}/talostpl-darwin-amd64)
            - [Darwin ARM64](https://github.com/vasyakrg/talostpl/releases/download/${{ github.ref_name }}/talostpl-darwin-arm64)
            - [Windows AMD64](https://github.com/vasyakrg/talostpl/releases/download/${{ github.ref_name }}/talostpl-windows-amd64.exe)
            - [Windows ARM64](https://github.com/vasyakrg/talostpl/releases/download/${{ github.ref_name }}/talostpl-windows-arm64.exe)
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  update-homebrew-tap:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout homebrew tap
        uses: actions/checkout@v4
        with:
          repository: vasyakrg/homebrew-talostpl
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          path: homebrew-talostpl

      - name: Download new release
        run: |
          VERSION=$(curl -s https://api.github.com/repos/vasyakrg/talostpl/releases/latest | grep '"tag_name":' | head -1 | cut -d '"' -f4 | sed 's/^v//')
          TAG="v$VERSION"

          # arm64
          ARM_URL="https://github.com/vasyakrg/talostpl/releases/download/$TAG/talostpl-darwin-arm64"
          curl -L -o talostpl-darwin-arm64 "$ARM_URL"
          ARM_SHA256=$(shasum -a 256 talostpl-darwin-arm64 | awk '{print $1}')
          sed -i "0,/url \".*\"/s|url \".*\"|url \"$ARM_URL\"|" homebrew-talostpl/Formula/talostpl.rb
          sed -i "0,/sha256 \".*\"/s|sha256 \".*\"|sha256 \"$ARM_SHA256\"|" homebrew-talostpl/Formula/talostpl.rb

          # version
          sed -i "s|version \".*\"|version \"$VERSION\"|" homebrew-talostpl/Formula/talostpl.rb

      - name: Commit and push
        run: |
          cd homebrew-talostpl
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add Formula/talostpl.rb
          git commit -m "Update talostpl formula to $VERSION"
          git push
